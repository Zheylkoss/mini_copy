faire une fonction qui clean tout
ctrl + C pendant un heredoc cancel toute la ligne
retirer les $ qui n'ont pas trouve de valeur
gerer les & dans les hereoc
mettre a jour mon pipex avec la nouvelle methode des heredoc
rajouter mmon pipex dans les conditions des pipex
si on fait unset hola=salut ne rien faire
executer minishell dans minishell
ajouter l'execution des buitlin dans pipex one
probleme avec export dans un pipe
gerer les erreurs de file directory or directory 
probleme builtin_export, avec les free de replace value ligne 179 (sinon on va devoir calculer la taille savoir si il y a assez de place sinon strjoin une partie et remplacer les valeurs existantes)
file name de output, argument et commande
pour pipex one, mettre exit en dehors de l'enfant, dans un pipe il ne modifie pas le code erreur (peute\ etre devoir faire 2 exit different)


verifier que tous les mallocs sont securises, faire la fonction clean exit et la mettre a la place des exit

faire un cas du signal pour le heredoc, si par exemple exi_code[1] = 4, fermer le pipe ou close(demander a so)

mieux analyser le ctrl+c dans multipipe, mettre les codes erreurs

valgrind --suppressions=readline_leaks.txt --leak-check=full --show-leak-kinds=all ./minishell


le probleme du replace dollar quand on met un simple guillement c'est que la comparaison du str_len se fait sur un simple guillemet, faire un str_len qui a la meme conditon de sortir que dans le foundit avec le long if

enlever le retour a la ligne du ctrl+d, ou ecrire exit

verifier le code erreur quand la command est null (>b)

HEREDOC SIGnal (on peut faire un fork et exit avec le signal)

< file cat | grep x output/outfile5 (essayer cette command quand file et output n'existe pas, probleme dans le mesage d'erreur)

verifier si check builtin fonctionne toujours aussi bien

gerer les erreurs de malloc dans builtin_cd

est ce que dans le builtin export, a est egal a 4 , si oui est il utilise 


echo "$EHDH$USER$USSERR"


mettre expand dollar dans output (a cause des heredoc), TESTER LE DOLLAR EXPAND
pour dollar verifier les cas comme "$" "$$" (ou plus) des dollars isoles, enture d'esace

 echo '$USEER'$USER

 echo $      $ (reduire les espaces a un seul espace)

 check avec $?
 et check cd 
 verifier tous les write et printf

 check si je fais un export avec '+=' d'une variable qui n'existe pas 

 que se passe il quand on fait un builtin dans un pipex et que donc le fork ne s'est pas fait

 test mutliple unset (quand on ecrit une fois unset mais qu'on en fait plusieur comme pour export export USER=z SHELL=h)

 remplacer les printf par des fd_put_str

 

 remplacer les if avec espace par:
 if (tab[i] == ' ' || (tab[i] < 14 && tab[i] > 7))
			return (1);


check le parsing des redirections (<> EOF >>, s'execute)

pour export tester avec des caracteres speciaux dans le nom (en general pas autorise) et dans la valeur (autorise)

que faire dans le cas d'une erreur dans CD

rajouter la fonction qui free dans le builtin exit

checke le builtin unset, probleme de free (le probleme vient peut etre que j'envoie pas l'original)

export sans argument devrait afficher l'env

TESTER LES SIGNAUXX DANS LES PIPE 


est ce que tu utilises    void			change_quote(char *str, int i, int single, int doubl); ??

rajouter le close heredoc dans zak pipex

verifier quand skip quote renvoie -1 et qu'est que cela fait apres 

j'ai peut etre regle le probleme des heredocs mais il faut verifier qu'on close bien tout psk j'evite pipex avec ma methode

probleme de quote et code erreur quand on appuie sur entree 